[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "option-flow"
version = "0.1.0"
description = "Option flow MVP ingest, API, and dashboard"
requires-python = ">=3.11"
authors = [{name = "Jonathan", email = "jonathan@example.com"}]
readme = "README.md"
license = {text = "Proprietary"}
dependencies = [
  "duckdb>=0.10.4",
  "fastapi>=0.111.0",
  "uvicorn[standard]>=0.30.0",
  "streamlit>=1.35.0",
  "websockets>=11.0.3",
  "httpx>=0.27.0",
  "pydantic>=2.7.0",
  "pydantic-settings>=2.2.1",
  "pandas>=2.2.0",
  "python-dotenv>=1.0.1",
  "apscheduler>=3.10.4",
  "rich>=13.7.0"
]

[project.optional-dependencies]
dev = [
  "pytest>=8.2.0",
  "pytest-asyncio>=0.23.6",
  "pytest-cov>=5.0.0",
  "mypy>=1.9.0",
  "ruff>=0.3.0",
  "types-requests",
  "types-python-dateutil"
]

dynamic = []

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "7.4"
addopts = "-ra --strict-markers"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.11"
plugins = []
strict = false

[tool.ruff]
line-length = 100
target-version = "py311"
select = ["E", "F", "I", "N", "UP", "B", "C4"]
ignore = []

[tool.ruff.lint.isort]
known-first-party = ["option_flow"]

